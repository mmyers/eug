
package editor;

import editor.mapmode.DiscreteScalingMapMode;
import editor.mapmode.MapMode;

/**
 *
 * @author Michael
 */
public class CustomScalingModeDialog extends javax.swing.JDialog {

    private boolean closedOK = false;
    
    /**
     * Creates new form CustomScalingModeDialog
     */
    public CustomScalingModeDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel6 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        propNameField = new javax.swing.JTextField();
        javax.swing.JPanel jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        minValueSpinner = new javax.swing.JSpinner();
        javax.swing.JPanel jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        maxValueSpinner = new javax.swing.JSpinner();
        javax.swing.JPanel jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        incrementSpinner = new javax.swing.JSpinner();
        javax.swing.JPanel jPanel11 = new javax.swing.JPanel();
        errorLabel = new javax.swing.JLabel();
        javax.swing.JPanel buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customize scaling map mode");

        jPanel6.setLayout(new java.awt.BorderLayout(5, 5));

        jPanel2.setLayout(new java.awt.GridLayout(0, 1));

        jPanel3.setLayout(new java.awt.GridLayout());

        jLabel1.setText("Property name: ");
        jPanel3.add(jLabel1);

        propNameField.setText(" ");
        propNameField.setPreferredSize(new java.awt.Dimension(130, 22));
        jPanel3.add(propNameField);

        jPanel2.add(jPanel3);

        jPanel7.setLayout(new java.awt.GridLayout());

        jLabel3.setText("Minimum value: ");
        jPanel7.add(jLabel3);

        minValueSpinner.setValue(1);
        jPanel7.add(minValueSpinner);

        jPanel2.add(jPanel7);

        jPanel8.setLayout(new java.awt.GridLayout());

        jLabel4.setText("Maximum value: ");
        jPanel8.add(jLabel4);

        maxValueSpinner.setValue(10);
        jPanel8.add(maxValueSpinner);

        jPanel2.add(jPanel8);

        jPanel9.setLayout(new java.awt.GridLayout());

        jLabel5.setText("Increment: ");
        jPanel9.add(jLabel5);

        incrementSpinner.setValue(1);
        jPanel9.add(incrementSpinner);

        jPanel2.add(jPanel9);

        jPanel6.add(jPanel2, java.awt.BorderLayout.CENTER);

        errorLabel.setText(" ");
        errorLabel.setToolTipText("");
        jPanel11.add(errorLabel);

        jPanel6.add(jPanel11, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel6);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (validateScales()) {
            closedOK = true;
            dispose();
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private boolean validateScales() {
        int min = (Integer)minValueSpinner.getValue();
        int max = (Integer)maxValueSpinner.getValue();
        int increment = (Integer)incrementSpinner.getValue();
        if (min < 0) {
            errorLabel.setText("Minimum value should be greater than 0");
            pack();
            return false;
        }
        if (increment < 1) {
            errorLabel.setText("Increment should be at least 1");
            pack();
            return false;
        }
        if (min >= max) {
            errorLabel.setText("Minimum value should be lower than maximum value");
            pack();
            return false;
        }
        if (min + increment >= max) {
            errorLabel.setText("Increment is too large or maximum is too close to minimum");
            pack();
            return false;
        }
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            CustomScalingModeDialog dialog = new CustomScalingModeDialog(new javax.swing.JFrame());
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    
    public static MapMode showDialog(java.awt.Frame parent) {
        CustomScalingModeDialog dialog = new CustomScalingModeDialog(parent);
        dialog.setVisible(true);
        if (dialog.closedOK)
            return dialog.getMapMode();
        return null;
    }    
    
    public MapMode getMapMode() {
        final String name = propNameField.getText().trim();
        int min = (Integer)minValueSpinner.getValue();
        int max = (Integer)maxValueSpinner.getValue();
        int step = (Integer)incrementSpinner.getValue();
        
//        if (countriesCheckBox.isSelected()) {
//            return new DiscreteScalingMapMode(name, min, max, step);
//        } else {
            DiscreteScalingMapMode mode = new DiscreteScalingMapMode(name, min, max, step);
            mode.setName(Text.getText(name));
            return mode;
//        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JSpinner incrementSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner maxValueSpinner;
    private javax.swing.JSpinner minValueSpinner;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField propNameField;
    // End of variables declaration//GEN-END:variables
}
